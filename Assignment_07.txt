Assignment -7 : Iterative Control Statement

----------------------------------------------------------------------------
//1. Write a program to find the Nth term of the Fibonnaci series.

#include<stdio.h>
int main()
{
    int a,b,t,n,i;
    a=0;
    b=1;
    printf("Enter value for n : ");
    scanf("%d",&n);
    for(i=1;i<n;i++)
    {
        t=a;
        a=b;
        b=t+a;
    }
    printf("%dth term of Fibonacci series = %d",n,a);
    return 0;
}
----------------------------------------------------------------------------
//2. Write a program to print first N terms of Fibonacci series

#include<stdio.h>
int main()
{
    int a,b,c,t,n,i;
    a=0;
    b=1;
    printf("Enter value for n : ");
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        printf("%d ",a);
        t=a;
        a=b;
        b=t+a;
    }
    return 0;
}
----------------------------------------------------------------------------
//3. Write a program to check whether a given number is there in the Fibonacci series or not.

#include<stdio.h>
int main()
{
    int a,b,c,t,n,i;
    a=0;
    b=1;
    printf("Enter a number : ");
    scanf("%d",&n);
    while(a<n)
    {
        t=a;
        a=b;
        b=t+a;
    }
    if(a==n)
        printf("%d is in Fibonacci series",n);
    else
        printf("%d is not in Fibonacci series",n);
    return 0;
}
----------------------------------------------------------------------------
//4. Write a program to calculate HCF of two numbers

#include<stdio.h>
int main()
{
    int a,b,hcf,i,min;
    printf("Enter two numbers : ");
    scanf("%d%d",&a,&b);
    min=a<b?a:b;
    for(i=min;i>=1;i--)
    {
        if(a%i==0 && b%i==0)
        {
            hcf=i;
            break;
        }
    }
    printf("HCF of %d and %d = %d",a,b,hcf);
    return 0;
}
----------------------------------------------------------------------------
//5. Write a program to check whether two given numbers are co-prime numbers or not

#include<stdio.h>
int main()
{
    int a,b,min,flag=0,i;
    printf("Enter two number : ");
    scanf("%d%d",&a,&b);
    for(i=2;i<=min;i++)
    {
        if(a%i==0 && b%i==0)
        {
            flag=1;
            break;
        }
    }
    if(flag==0)
        printf("%d and %d are co-prime number",a,b);
    else
        printf("%d and %d are not co-prime number",a,b);

}
----------------------------------------------------------------------------
//6. Write a program to print all Prime numbers under 100

#include<stdio.h>
int main()
{
    int i,j,c;
    for(i=2;i<=100;i++)
    {
        c=0;
        for(j=1;j<=i;j++)
        {
            if(i%j==0)
                c++;
        }
        if(c==2)
            printf("%d ",i);
    }    
    return 0;
}
----------------------------------------------------------------------------
//7. Write a program to print all Prime numbers between two given numbers

#include<stdio.h>
int main()
{
    int a,b,i,j,c;
    printf("Enter starting number : ");
    scanf("%d",&a);
    printf("Enter ending number : ");
    scanf("%d",&b);
    for(i=a;i<=b;i++)
    {
        c=0;
        for(j=1;j<=i;j++)
        {
            if(i%j==0)
                c++;
        }
        if(c==2)
            printf("%d ",i);
    }    
    return 0;
}
----------------------------------------------------------------------------
//8. Write a program to find next Prime number of a given number

#include<stdio.h>
int main()
{
    int n,x,c,i;
    printf("Enter a number : ");
    scanf("%d",&n);
    x=n;
    do
    {
        x++;
        c=0;
        for(i=1;i<=x;i++)
        {
            if(x%i==0)
                c++;
        }
        if(c==2)
            break;
    } while(c!=2);
    printf("Next Prime of %d is %d",n,x);
    
    return 0;
}
----------------------------------------------------------------------------
//9. Write a program to check whether a given number is an Armstrong number or not

#include<stdio.h>
int main()
{
    int r,n,x,s=0;
    printf("Enter a number : ");
    scanf("%d",&n);
    x=n;
    while(x>0)
    {
        r=x%10;
        s=s+(r*r*r);
        x=x/10;
    }
    if(n==s)
        printf("%d is an Armstrong number",n);
    else
        printf("%d is not an Armstrong number",n);
    return 0;
}
----------------------------------------------------------------------------
//10. Write a program to print all Armstrong numbers under 1000

#include<stdio.h>
int main()
{
    int n,r,i,s;
    for(i=100;i<1000;i++)
    {
        s=0;
        n=i;
        while(n>0)
        {
            r=n%10;
            s=s+(r*r*r);
            n=n/10;
        }
        if(i==s)
            printf("%d ",i);
    }
    return 0;
}
----------------------------------------------------------------------------