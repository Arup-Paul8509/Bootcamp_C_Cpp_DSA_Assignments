Assignment - 19 : Handle Multiple String

-------------------------------------------------------------------------------------------------------------------------------------
//1. Write a program to find the number of vowels in each of the 5 strings stored in two dimensional arrays, taken from the user.

#include<stdio.h>
#include<string.h>
int countVowel(char[]);
int main()
{
    char str[5][15];
    int i;
    printf("Enter 5 strings :");
    for(i=0;i<5;i++)
    {
        fflush(stdin);
        fgets(str[i],15,stdin);
        str[i][strlen(str[i])-1]='\0';
    }
    for(i=0;i<5;i++)
        printf("\nNo of vowel in string %d : %d",i+1,countVowel(str[i]));
    return 0;
}
int countVowel(char s[])
{
    int i,c=0;
    for(i=0;s[i];i++)
    {
        switch(s[i])
        {
            case 'a':
            case 'A':
            case 'e':
            case 'E':
            case 'i':
            case 'I':
            case 'o':
            case 'O':
            case 'u':
            case 'U':
                c++;
        }
    }
    return c;
}
-------------------------------------------------------------------------------------------------------------------------------------
//2. Write a program to sort 10 city names stored in two dimensional arrays, taken from the user.

#include<stdio.h>
#include<string.h>
void sort(char[][20],int);
int main()
{
    char city[10][20];
    int i;
    printf("Enter 10 city names:");
    for(i=0;i<10;i++)
    {
        fflush(stdin);
        fgets(city[i],20,stdin);
    }
    sort(city,10);
    printf("\nSorted cities ---\n");
    for(i=0;i<10;i++)
    {
        printf("%s",city[i]);
    }
    return 0;
}
void sort(char city[][20],int n)
{
    int i,j;
    char t[20];
    for(i=0;i<n-1;i++)
    {
        for(j=0;j<n-i-1;j++)
        {
            if(strcmp(city[j],city[j+1])==1)
            {
                strcpy(t,city[j]);
                strcpy(city[j],city[j+1]);
                strcpy(city[j+1],t);
            }
        }
    }

}
-------------------------------------------------------------------------------------------------------------------------------------
//3. Write a program to read and display a 2D array of strings in C language.

#include<stdio.h>
#include<string.h>
void read(char[][20],int);
void display(char[][20],int);
int main()
{
    char str[20][20];
    int n;
    printf("Enter number of strings : ");
    scanf("%d",&n);
    read(str,n);
    printf("\nStrings ---\n");
    display(str,n);
    return 0;
}
void read(char str[][20],int n)
{
    printf("Enter %d strings : ",n);
    int i;
    for(i=0;i<n;i++)
    {
        fflush(stdin);
        fgets(str[i],20,stdin);
    }
}
void display(char str[][20],int n)
{
    int i;
    for(i=0;i<n;i++)
        printf("%s",str[i]);
}
-------------------------------------------------------------------------------------------------------------------------------------
//4. Write a program to search a string in the list of strings.

#include<stdio.h>
#include<string.h>
int search(char[][20],char[],int);
int main()
{
    char str[5][20]={"Siliguri","Kolkata","Bhopal","Allahabad","Bengaluru"};
    char s[20];
    printf("Enter a string you want to search : ");
    fflush(stdin);
    fgets(s,20,stdin);
    s[strlen(s)-1]='\0';
    if(search(str,s,5)==-1)
    {
        printf("String not found");
    }
    else
    {
        printf("String found at location %d",search(str,s,5));
    }
    return 0;
}
int search(char str[][20],char s[20],int n)
{
    int i;
    for(i=0;i<n;i++)
    {
        if(strcmp(str[i],s)==0)
            break;
    }
    if(i==n)
        return -1;
    else
        return i+1;
}
-------------------------------------------------------------------------------------------------------------------------------------
//5. Suppose we have a list of email addresses, check whether all email addresses have ‘@’ in it. Print the odd email out.

#include<stdio.h>
void oddEmails(char[][40],int);
int main()
{
    char email[5][40]={"arup.paul.sbhs@gmail.com","paularup0311@gmail.com","aruppaulgmail.com","arup@gmail.com","paul7074gmail.com"};
    oddEmails(email,5);
    return 0;
}
void oddEmails(char email[][40],int n)
{
    int i,j,flag;
    for(i=0;i<n;i++)
    {
        flag=0;
        for(j=0;email[i][j];j++)
        {
            if(email[i][j]=='@')
            {
                flag=1;
                break;
            }
        }
        if(flag==0)
        {
            printf("\n%s",email[i]);
        }
    }
}
-------------------------------------------------------------------------------------------------------------------------------------
//6. Write a program to print the strings which are palindrome in the list of strings.

#include<stdio.h>
void displayPalindrome(char[][20],int);
int main()
{
    char str[5][20]={"arup","level","java","eye","abba"};
    displayPalindrome(str,5);
    return 0;
}
void displayPalindrome(char s[][20],int n)
{
    int i,j,l;
    for(i=0;i<n;i++)
    {
        for(j=0;s[i][j];j++);
        l=j;
        for(j=0;j<l/2;j++)
        {
            if(s[i][j]!=s[i][l-j-1])
                break;
        }
        if(j==l/2)
            printf("\n%s",s[i]);
    }
}
-------------------------------------------------------------------------------------------------------------------------------------
//7. From the list of IP addresses, check whether all ip addresses are valid.

#include<stdio.h>
int checkIps(char[][13],int);
int main()
{
    char ip[5][13]={"192.23.51.9","112.23.15.12","123.456.78.9","192.1.00.1","032.156.4789"};
    if(checkIps(ip,5))
        printf("All ip addresses are valid");
    else
        printf("All ip addresses are not valid");
    return 0;
}
int checkIps(char ip[][13],int n)
{
    int i,j,c;
    for(i=0;i<n;i++)
    {
        c=0;
        for(j=0;ip[i][j];j++)
        {
            if(ip[i][j]=='.')
                c++;
        }
        if(c!=3)
            break;
    }
    if(i==n)
        return 1;
    else
        return 0;
}
-------------------------------------------------------------------------------------------------------------------------------------
/*
8. Given a list of words followed by two words, the task is to find the minimum distance between the given 
two words in the list of words.
 (Example : s = {“the”,”quick”,”brown”,”fox”,”quick”} word1 = “the”, word2 = “fox”, OUTPUT : 1 )
*/

#include<stdio.h>
#include<string.h>
int minDistance(char[][20],int,char[],char[]);
int main()
{
    int i;
    char str[5][20]={"the","quick","brown","fox","jumps"};
    char w1[20],w2[20];
    printf("Enter word 1 : ");
    fflush(stdin);
    fgets(w1,20,stdin);
    for(i=0;w1[i];i++);
    w1[i-1]='\0';
    printf("Enter word 2 : ");
    fflush(stdin);
    fgets(w2,20,stdin);
    for(i=0;w2[i];i++);
    w2[i-1]='\0';
    printf("Minimum Distance = %d",minDistance(str,5,w1,w2));
    return 0;
}
int minDistance(char str[][20],int n,char w1[],char w2[])
{
    int i1,i2,i,md1,md2;
    for(i=0;i<n;i++)
    {
        if(strcmp(w1,str[i])==0)
            i1=i;
        if(strcmp(w2,str[i])==0)
            i2=i;
    }
    md1=i2-i1-1;
    md2=n-1-i2+i1;
    if(md1<md2)
        return md1;
    else
        return md2;
}
-------------------------------------------------------------------------------------------------------------------------------------
/*9. Write a program that asks the user to enter a username. If the username entered is one of the names 
    in the list then the user is allowed to calculate the factorial of a number. Otherwise, an error message is displayed
*/

#include<stdio.h>
#include<string.h>
void factorial();
int main()
{
    char uname[5][30]={"arup","tushar","debasmita","mysirg","ineuron"};
    char name[30];
    int i;
    printf("Enter username : ");
    fflush(stdin);
    fgets(name,30,stdin);
    name[strlen(name)-1]='\0';
    for(i=0;i<5;i++)
    {
        if(strcmp(uname[i],name)==0)
            break;
    }
    if(i==5)
        printf("Invalid user name !!!");
    else
        factorial();
    return 0;
}
void factorial()
{
     int i,n,f=1;
     printf("Enter a number : ");
     scanf("%d",&n);
     for(i=1;i<=n;i++)
        f=f*i;
     printf("Factorial = %d",f);
}
-------------------------------------------------------------------------------------------------------------------------------------
//10. Create an authentication system. It should be menu driven.

// Code will be written soon
-------------------------------------------------------------------------------------------------------------------------------------